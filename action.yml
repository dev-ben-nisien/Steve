name: "AskSteveAboutDocs"
description: "Does some architectural analysis using LLMs and says if your docs are lacking"
author: "BF"
branding:
  icon: "rocket"
  color: "blue"
inputs:
  github_token:
    type: string
    required: true
  openai_api_token:
    type: string
    required: true
  docs_path:
    type: string
    required: true
runs:
  using: "composite"
  steps:
    - name: Set up things
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    - uses: actions/checkout@v4
      with:
        repository: 'dev-ben-nisien/Steve'
        path: ./Steve
        clean: false
    - name: Is it cached?
      id: cache-pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip
    - name: Install
      shell: bash
      run: |
        pip install --upgrade pip setuptools wheel
        pip install -r ./Steve/requirements.txt
    - name: Do stuff
      id: run_script
      shell: bash
      run: |
          OUTPUT=$(git diff origin/main -- | python "./Steve/main.py")
          echo "script_output<<EOF" >> "$GITHUB_OUTPUT"
          echo "$OUTPUT" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
      env:
        OPENAI_API_KEY: ${{ inputs.openai_api_token }}
        DOCS_PATH: ${{ inputs.docs_path }}

    - name: Get existing comment ID
      id: get_comment
      uses: actions/github-script@v6
      with:
        script: |
          const uniqueMarker = 'Steve';
          const pr = context.payload.pull_request;
          if (!pr) {
            core.setFailed("No pull request found.");
            return;
          }
          const prNumber = pr.number;
          const { data: comments } =
            await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });
          const existingComment = comments.find(c => c.body.includes(uniqueMarker));
          if (existingComment) {
            core.setOutput("commentId", existingComment.id);
          } else {
            core.setOutput("commendId", "");
          }
            
    - name: Create PR Comment
      if: steps.get_comment.outputs.commendId == ''
      id: comment
      uses: peter-evans/create-or-update-comment@v2
      with:
        token: ${{ inputs.github_token }}
        issue-number: ${{ github.event.pull_request.number }}
        body: ${{ steps.run_script.outputs.script_output }}

    - name: Update PR Comment
      if: steps.get_comment.outputs.commentId != ''
      id: update
      uses: peter-evans/create-or-update-comment@v2
      with:
        token: ${{ inputs.github_token }}
        issue-number: ${{ github.event.pull_request.number }}
        comment-id: ${{steps.get_comment.outputs.commentId}}
        edit-mode: replace
        body: ${{ steps.run_script.outputs.script_output }}